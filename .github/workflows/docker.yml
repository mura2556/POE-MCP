name: Docker Image

on:
  push:
    branches: [main]
    tags: ["v*"]
  workflow_dispatch:

env:
  OFFICIAL_OWNER: anthropics

jobs:
  build-and-push:
    if: github.repository_owner == env.OFFICIAL_OWNER
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 10.5.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "pnpm"

      - name: Determine version metadata
        id: meta
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >>"$GITHUB_OUTPUT"
          echo "sha=${GITHUB_SHA}" >>"$GITHUB_OUTPUT"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build application bundle
        run: |
          pnpm build
          pnpm build:bin
          pnpm build:schemas

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/poe-mcp
        run: |
          docker build \
            --build-arg VERSION=${{ steps.meta.outputs.version }} \
            --build-arg VCS_REF=${{ steps.meta.outputs.sha }} \
            --build-arg SOURCE_URL=https://github.com/${{ github.repository }} \
            -t "$IMAGE:latest" \
            -t "$IMAGE:${{ github.ref_name }}" \
            .

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@v0.24.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/poe-mcp:latest
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          exit-code: '1'

      - name: Push container image
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/poe-mcp
        run: |
          docker push "$IMAGE:latest"
          docker push "$IMAGE:${{ github.ref_name }}"
